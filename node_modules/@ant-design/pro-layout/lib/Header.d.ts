import './Header.less';
import React, { Component } from 'react';
import { BasicLayoutProps } from './BasicLayout';
import { Settings } from './defaultSettings';
import { WithFalse } from './typings';
export interface HeaderViewProps extends Partial<Settings> {
    isMobile?: boolean;
    collapsed?: boolean;
    logo?: React.ReactNode;
    autoHideHeader?: boolean;
    headerRender?: BasicLayoutProps['headerRender'];
    rightContentRender?: WithFalse<(props: HeaderViewProps) => React.ReactNode>;
    handleMenuCollapse?: (collapse: boolean) => void;
    siderWidth?: number;
}
interface HeaderViewState {
    visible: boolean;
}
declare class HeaderView extends Component<HeaderViewProps, HeaderViewState> {
    static getDerivedStateFromProps(props: HeaderViewProps, state: HeaderViewState): HeaderViewState | null;
    state: {
        visible: boolean;
    };
    ticking: boolean;
    oldScrollTop: number;
    componentDidMount(): void;
    componentWillUnmount(): void;
    getHeadWidth: () => string;
    handScroll: () => void;
    renderContent: () => {} | null | undefined;
    render(): React.ReactNode;
}
export default HeaderView;
